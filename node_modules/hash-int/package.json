{
  "name": "hash-int",
  "version": "0.0.0",
  "description": "Hashes integers",
  "main": "hashint.js",
  "directories": {
    "test": "test"
  },
  "devDependencies": {
    "tap": "~0.4.1",
    "numeric": "~1.2.6"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/hash-int.git"
  },
  "keywords": [
    "integer",
    "hash",
    "psuedo",
    "random",
    "number",
    "integer",
    "table",
    "thomas",
    "wang"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "c5366e03d49fe40145c27785b502317b41a07338",
  "readme": "# hash-int\nGiven an integer, deterministically computes a psuedorandom unsigned 32 bit integer.  Based on Thomas Wang's 7-shift integer hash algorithm.  For more discussion and experiments, see the following references:\n\n* Thomas Wang's Original Homepage (now down):  http://www.cris.com/~Ttwang/tech/inthash.htm\n* Bob Jenkins' Write Up: http://burtleburtle.net/bob/hash/integer.html\n\n## Install\n\n    npm install hash-int\n    \n## Example\n\n```javascript\nvar hashInt = require(\"hash-int\")\n\nfor(var i=-10; i<=10; ++i) {\n  console.log(hashInt(i))\n}\n```\n\n### `require(\"hash-int\")(x)`\nGiven an integer `x` as a seed, computes a psuedorandom integer.\n\n* `x` the seed value\n\n**Returns**: A signed 32 bit integer representing the value of `x`\n\n# Credits\nAlgorithm by Thomas Wang\n\nJS Port (c) 2013 Mikola Lysenko. MIT License",
  "bugs": {
    "url": "https://github.com/mikolalysenko/hash-int/issues"
  },
  "homepage": "https://github.com/mikolalysenko/hash-int",
  "_id": "hash-int@0.0.0",
  "_from": "hash-int@*"
}
